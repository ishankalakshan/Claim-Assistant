//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Claim.MobileApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/MVCS_WCF_Service")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Authenticate", ReplyAction="http://tempuri.org/IService1/AuthenticateResponse")]
        string Authenticate(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPolicyInfo", ReplyAction="http://tempuri.org/IService1/GetPolicyInfoResponse")]
        string GetPolicyInfo(int policy_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClaimHistory", ReplyAction="http://tempuri.org/IService1/GetClaimHistoryResponse")]
        string GetClaimHistory(int policy_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddClaimRequest", ReplyAction="http://tempuri.org/IService1/AddClaimRequestResponse")]
        int AddClaimRequest(string claimRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGarageInfo", ReplyAction="http://tempuri.org/IService1/GetGarageInfoResponse")]
        string GetGarageInfo(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTowTruckServiceInfo", ReplyAction="http://tempuri.org/IService1/GetTowTruckServiceInfoResponse")]
        string GetTowTruckServiceInfo(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertClaim", ReplyAction="http://tempuri.org/IService1/InsertClaimResponse")]
        bool InsertClaim(string claim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSparepartCategories", ReplyAction="http://tempuri.org/IService1/GetSparepartCategoriesResponse")]
        string GetSparepartCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSparepartManufacturers", ReplyAction="http://tempuri.org/IService1/GetSparepartManufacturersResponse")]
        string GetSparepartManufacturers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSpareparts", ReplyAction="http://tempuri.org/IService1/GetSparepartsResponse")]
        string GetSpareparts(string manufacturer, string catergory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        Claim.MobileApp.ServiceReference1.CompositeType GetDataUsingDataContract(Claim.MobileApp.ServiceReference1.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Claim.MobileApp.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Claim.MobileApp.ServiceReference1.IService1>, Claim.MobileApp.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public string Authenticate(string username, string password) {
            return base.Channel.Authenticate(username, password);
        }
        
        public string GetPolicyInfo(int policy_ID) {
            return base.Channel.GetPolicyInfo(policy_ID);
        }
        
        public string GetClaimHistory(int policy_ID) {
            return base.Channel.GetClaimHistory(policy_ID);
        }
        
        public int AddClaimRequest(string claimRequest) {
            return base.Channel.AddClaimRequest(claimRequest);
        }
        
        public string GetGarageInfo(string location) {
            return base.Channel.GetGarageInfo(location);
        }
        
        public string GetTowTruckServiceInfo(string location) {
            return base.Channel.GetTowTruckServiceInfo(location);
        }
        
        public bool InsertClaim(string claim) {
            return base.Channel.InsertClaim(claim);
        }
        
        public string GetSparepartCategories() {
            return base.Channel.GetSparepartCategories();
        }
        
        public string GetSparepartManufacturers() {
            return base.Channel.GetSparepartManufacturers();
        }
        
        public string GetSpareparts(string manufacturer, string catergory) {
            return base.Channel.GetSpareparts(manufacturer, catergory);
        }
        
        public Claim.MobileApp.ServiceReference1.CompositeType GetDataUsingDataContract(Claim.MobileApp.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
    }
}
